
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.DoctorScalarFieldEnum = {
  id: 'id',
  fullName: 'fullName',
  email: 'email',
  mobileNumber: 'mobileNumber',
  passwordHash: 'passwordHash',
  specialty: 'specialty',
  clinicHospitalName: 'clinicHospitalName',
  clinicAddress: 'clinicAddress',
  workingHours: 'workingHours',
  consultationDuration: 'consultationDuration',
  contactNumber: 'contactNumber',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  fullName: 'fullName',
  mobileNumber: 'mobileNumber',
  email: 'email',
  passwordHash: 'passwordHash',
  age: 'age',
  gender: 'gender',
  address: 'address',
  dateOfBirth: 'dateOfBirth',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TicketScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  doctorId: 'doctorId',
  ticketNumber: 'ticketNumber',
  bookingTime: 'bookingTime',
  status: 'status',
  estimatedWaitTime: 'estimatedWaitTime',
  queuePosition: 'queuePosition',
  actualConsultationTime: 'actualConsultationTime',
  consultationDuration: 'consultationDuration',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PrescriptionScalarFieldEnum = {
  id: 'id',
  ticketId: 'ticketId',
  doctorId: 'doctorId',
  patientId: 'patientId',
  diagnosis: 'diagnosis',
  symptoms: 'symptoms',
  notes: 'notes',
  followUpDate: 'followUpDate',
  prescriptionFileUrl: 'prescriptionFileUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MedicineScalarFieldEnum = {
  id: 'id',
  prescriptionId: 'prescriptionId',
  medicineName: 'medicineName',
  dosage: 'dosage',
  frequency: 'frequency',
  duration: 'duration',
  instructions: 'instructions',
  quantity: 'quantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PharmacyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  contactNumber: 'contactNumber',
  email: 'email',
  locationCoordinates: 'locationCoordinates',
  openingHours: 'openingHours',
  isActive: 'isActive',
  rating: 'rating',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MedicineAvailabilityScalarFieldEnum = {
  id: 'id',
  medicineId: 'medicineId',
  pharmacyId: 'pharmacyId',
  stockStatus: 'stockStatus',
  price: 'price',
  lastUpdated: 'lastUpdated',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Specialty = exports.$Enums.Specialty = {
  General_Physician: 'General_Physician',
  Dentist: 'Dentist',
  Cardiologist: 'Cardiologist',
  Dermatologist: 'Dermatologist',
  Orthopedic: 'Orthopedic',
  Pediatrician: 'Pediatrician',
  Gynecologist: 'Gynecologist',
  ENT_Specialist: 'ENT_Specialist',
  Ophthalmologist: 'Ophthalmologist',
  Neurologist: 'Neurologist',
  Other: 'Other'
};

exports.Gender = exports.$Enums.Gender = {
  Male: 'Male',
  Female: 'Female',
  Other: 'Other',
  Prefer_not_to_say: 'Prefer_not_to_say'
};

exports.TicketStatus = exports.$Enums.TicketStatus = {
  waiting: 'waiting',
  in_consultation: 'in_consultation',
  consulted: 'consulted',
  left: 'left',
  cancelled: 'cancelled'
};

exports.StockStatus = exports.$Enums.StockStatus = {
  in_stock: 'in_stock',
  out_of_stock: 'out_of_stock',
  low_stock: 'low_stock'
};

exports.Prisma.ModelName = {
  Doctor: 'Doctor',
  Patient: 'Patient',
  Ticket: 'Ticket',
  Prescription: 'Prescription',
  Medicine: 'Medicine',
  Pharmacy: 'Pharmacy',
  MedicineAvailability: 'MedicineAvailability'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Medical Ticketing System\\mediqueue\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Medical Ticketing System\\mediqueue\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ============================================\n// ENUMS\n// ============================================\n\nenum Specialty {\n  General_Physician @map(\"General Physician\")\n  Dentist\n  Cardiologist\n  Dermatologist\n  Orthopedic\n  Pediatrician\n  Gynecologist\n  ENT_Specialist    @map(\"ENT Specialist\")\n  Ophthalmologist\n  Neurologist\n  Other\n}\n\nenum Gender {\n  Male\n  Female\n  Other\n  Prefer_not_to_say @map(\"Prefer not to say\")\n}\n\nenum TicketStatus {\n  waiting\n  in_consultation\n  consulted\n  left\n  cancelled\n}\n\nenum StockStatus {\n  in_stock\n  out_of_stock\n  low_stock\n}\n\n// ============================================\n// MODELS\n// ============================================\n\nmodel Doctor {\n  id                   String    @id @default(dbgenerated(\"uuid_generate_v4()\")) @db.Uuid\n  fullName             String    @map(\"full_name\") @db.VarChar(255)\n  email                String?   @unique @db.VarChar(255)\n  mobileNumber         String?   @unique @map(\"mobile_number\") @db.VarChar(20)\n  passwordHash         String    @map(\"password_hash\") @db.VarChar(255)\n  specialty            Specialty\n  clinicHospitalName   String    @map(\"clinic_hospital_name\") @db.VarChar(255)\n  clinicAddress        String    @map(\"clinic_address\") @db.Text\n  workingHours         Json      @default(\"{}\") @map(\"working_hours\")\n  consultationDuration Int       @map(\"consultation_duration\")\n  contactNumber        String?   @map(\"contact_number\") @db.VarChar(20)\n  isActive             Boolean   @default(true) @map(\"is_active\")\n  createdAt            DateTime  @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt            DateTime  @default(now()) @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n\n  // Relations\n  tickets       Ticket[]\n  prescriptions Prescription[]\n\n  @@index([specialty], name: \"idx_doctors_specialty\")\n  @@index([clinicAddress], name: \"idx_doctors_clinic_address\")\n  @@index([email], name: \"idx_doctors_email\")\n  @@index([mobileNumber], name: \"idx_doctors_mobile\")\n  @@index([isActive], name: \"idx_doctors_active\")\n  @@map(\"doctors\")\n}\n\nmodel Patient {\n  id           String    @id @default(dbgenerated(\"uuid_generate_v4()\")) @db.Uuid\n  fullName     String    @map(\"full_name\") @db.VarChar(255)\n  mobileNumber String?   @unique @map(\"mobile_number\") @db.VarChar(20)\n  email        String?   @unique @db.VarChar(255)\n  passwordHash String    @map(\"password_hash\") @db.VarChar(255)\n  age          Int?\n  gender       Gender?\n  address      String?   @db.Text\n  dateOfBirth  DateTime? @map(\"date_of_birth\") @db.Date\n  createdAt    DateTime  @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt    DateTime  @default(now()) @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n\n  // Relations\n  tickets       Ticket[]\n  prescriptions Prescription[]\n\n  @@index([mobileNumber], name: \"idx_patients_mobile\")\n  @@index([email], name: \"idx_patients_email\")\n  @@map(\"patients\")\n}\n\nmodel Ticket {\n  id                     String       @id @default(dbgenerated(\"uuid_generate_v4()\")) @db.Uuid\n  patientId              String       @map(\"patient_id\") @db.Uuid\n  doctorId               String       @map(\"doctor_id\") @db.Uuid\n  ticketNumber           String       @unique @map(\"ticket_number\") @db.VarChar(50)\n  bookingTime            DateTime     @default(now()) @map(\"booking_time\") @db.Timestamptz(6)\n  status                 TicketStatus @default(waiting)\n  estimatedWaitTime      Int?         @map(\"estimated_wait_time\")\n  queuePosition          Int?         @map(\"queue_position\")\n  actualConsultationTime DateTime?    @map(\"actual_consultation_time\") @db.Timestamptz(6)\n  consultationDuration   Int?         @map(\"consultation_duration\")\n  createdAt              DateTime     @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt              DateTime     @default(now()) @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n\n  // Relations\n  patient      Patient       @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  doctor       Doctor        @relation(fields: [doctorId], references: [id], onDelete: Cascade)\n  prescription Prescription?\n\n  @@index([patientId], name: \"idx_tickets_patient\")\n  @@index([doctorId], name: \"idx_tickets_doctor\")\n  @@index([status], name: \"idx_tickets_status\")\n  @@index([bookingTime], name: \"idx_tickets_booking_time\")\n  @@index([doctorId, status], name: \"idx_tickets_doctor_status\")\n  @@index([ticketNumber], name: \"idx_tickets_number\")\n  @@map(\"tickets\")\n}\n\nmodel Prescription {\n  id                  String    @id @default(dbgenerated(\"uuid_generate_v4()\")) @db.Uuid\n  ticketId            String    @unique @map(\"ticket_id\") @db.Uuid\n  doctorId            String    @map(\"doctor_id\") @db.Uuid\n  patientId           String    @map(\"patient_id\") @db.Uuid\n  diagnosis           String?   @db.Text\n  symptoms            String?   @db.Text\n  notes               String?   @db.Text\n  followUpDate        DateTime? @map(\"follow_up_date\") @db.Date\n  prescriptionFileUrl String?   @map(\"prescription_file_url\") @db.Text\n  createdAt           DateTime  @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt           DateTime  @default(now()) @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n\n  // Relations\n  ticket    Ticket     @relation(fields: [ticketId], references: [id], onDelete: Cascade)\n  doctor    Doctor     @relation(fields: [doctorId], references: [id], onDelete: Cascade)\n  patient   Patient    @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  medicines Medicine[]\n\n  @@index([ticketId], name: \"idx_prescriptions_ticket\")\n  @@index([patientId], name: \"idx_prescriptions_patient\")\n  @@index([doctorId], name: \"idx_prescriptions_doctor\")\n  @@map(\"prescriptions\")\n}\n\nmodel Medicine {\n  id             String   @id @default(dbgenerated(\"uuid_generate_v4()\")) @db.Uuid\n  prescriptionId String   @map(\"prescription_id\") @db.Uuid\n  medicineName   String   @map(\"medicine_name\") @db.VarChar(255)\n  dosage         String   @db.VarChar(100)\n  frequency      String   @db.VarChar(100)\n  duration       String   @db.VarChar(100)\n  instructions   String?  @db.Text\n  quantity       Int?\n  createdAt      DateTime @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt      DateTime @default(now()) @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n\n  // Relations\n  prescription Prescription           @relation(fields: [prescriptionId], references: [id], onDelete: Cascade)\n  availability MedicineAvailability[]\n\n  @@index([prescriptionId], name: \"idx_medicines_prescription\")\n  @@index([medicineName], name: \"idx_medicines_name\")\n  @@map(\"medicines\")\n}\n\nmodel Pharmacy {\n  id                  String   @id @default(dbgenerated(\"uuid_generate_v4()\")) @db.Uuid\n  name                String   @db.VarChar(255)\n  address             String   @db.Text\n  contactNumber       String   @map(\"contact_number\") @db.VarChar(20)\n  email               String?  @db.VarChar(255)\n  locationCoordinates Json     @map(\"location_coordinates\")\n  openingHours        Json     @default(\"{}\") @map(\"opening_hours\")\n  isActive            Boolean  @default(true) @map(\"is_active\")\n  rating              Decimal? @db.Decimal(2, 1)\n  createdAt           DateTime @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt           DateTime @default(now()) @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n\n  // Relations\n  medicineAvailability MedicineAvailability[]\n\n  @@index([locationCoordinates], name: \"idx_pharmacies_location\", type: Gin)\n  @@index([isActive], name: \"idx_pharmacies_active\")\n  @@index([name], name: \"idx_pharmacies_name\")\n  @@map(\"pharmacies\")\n}\n\nmodel MedicineAvailability {\n  id          String      @id @default(dbgenerated(\"uuid_generate_v4()\")) @db.Uuid\n  medicineId  String      @map(\"medicine_id\") @db.Uuid\n  pharmacyId  String      @map(\"pharmacy_id\") @db.Uuid\n  stockStatus StockStatus @default(in_stock) @map(\"stock_status\")\n  price       Decimal?    @db.Decimal(10, 2)\n  lastUpdated DateTime    @default(now()) @map(\"last_updated\") @db.Timestamptz(6)\n  createdAt   DateTime    @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt   DateTime    @default(now()) @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n\n  // Relations\n  medicine Medicine @relation(fields: [medicineId], references: [id], onDelete: Cascade)\n  pharmacy Pharmacy @relation(fields: [pharmacyId], references: [id], onDelete: Cascade)\n\n  @@unique([medicineId, pharmacyId])\n  @@index([medicineId], name: \"idx_medicine_availability_medicine\")\n  @@index([pharmacyId], name: \"idx_medicine_availability_pharmacy\")\n  @@index([stockStatus], name: \"idx_medicine_availability_stock\")\n  @@map(\"medicine_availability\")\n}\n",
  "inlineSchemaHash": "2cf63bc1383c9faca74f662a9bc66fb7b2adb1aed0bb733042aea3bb1813d845",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Doctor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"full_name\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobileNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mobile_number\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"specialty\",\"kind\":\"enum\",\"type\":\"Specialty\"},{\"name\":\"clinicHospitalName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"clinic_hospital_name\"},{\"name\":\"clinicAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"clinic_address\"},{\"name\":\"workingHours\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"working_hours\"},{\"name\":\"consultationDuration\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"consultation_duration\"},{\"name\":\"contactNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_number\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"DoctorToTicket\"},{\"name\":\"prescriptions\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"DoctorToPrescription\"}],\"dbName\":\"doctors\"},\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"full_name\"},{\"name\":\"mobileNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mobile_number\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_of_birth\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"PatientToTicket\"},{\"name\":\"prescriptions\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"PatientToPrescription\"}],\"dbName\":\"patients\"},\"Ticket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"patient_id\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"doctor_id\"},{\"name\":\"ticketNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ticket_number\"},{\"name\":\"bookingTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"booking_time\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TicketStatus\"},{\"name\":\"estimatedWaitTime\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"estimated_wait_time\"},{\"name\":\"queuePosition\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"queue_position\"},{\"name\":\"actualConsultationTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"actual_consultation_time\"},{\"name\":\"consultationDuration\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"consultation_duration\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToTicket\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToTicket\"},{\"name\":\"prescription\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"PrescriptionToTicket\"}],\"dbName\":\"tickets\"},\"Prescription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ticketId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ticket_id\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"doctor_id\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"patient_id\"},{\"name\":\"diagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"symptoms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"followUpDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"follow_up_date\"},{\"name\":\"prescriptionFileUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"prescription_file_url\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"PrescriptionToTicket\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToPrescription\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToPrescription\"},{\"name\":\"medicines\",\"kind\":\"object\",\"type\":\"Medicine\",\"relationName\":\"MedicineToPrescription\"}],\"dbName\":\"prescriptions\"},\"Medicine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prescriptionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"prescription_id\"},{\"name\":\"medicineName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"medicine_name\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"prescription\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"MedicineToPrescription\"},{\"name\":\"availability\",\"kind\":\"object\",\"type\":\"MedicineAvailability\",\"relationName\":\"MedicineToMedicineAvailability\"}],\"dbName\":\"medicines\"},\"Pharmacy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_number\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationCoordinates\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"location_coordinates\"},{\"name\":\"openingHours\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"opening_hours\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"medicineAvailability\",\"kind\":\"object\",\"type\":\"MedicineAvailability\",\"relationName\":\"MedicineAvailabilityToPharmacy\"}],\"dbName\":\"pharmacies\"},\"MedicineAvailability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicineId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"medicine_id\"},{\"name\":\"pharmacyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"pharmacy_id\"},{\"name\":\"stockStatus\",\"kind\":\"enum\",\"type\":\"StockStatus\",\"dbName\":\"stock_status\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_updated\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"medicine\",\"kind\":\"object\",\"type\":\"Medicine\",\"relationName\":\"MedicineToMedicineAvailability\"},{\"name\":\"pharmacy\",\"kind\":\"object\",\"type\":\"Pharmacy\",\"relationName\":\"MedicineAvailabilityToPharmacy\"}],\"dbName\":\"medicine_availability\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

